CREATE OR REPLACE FUNCTION setUpdatedAt()
    RETURNS TRIGGER AS $$
BEGIN
    NEW."updatedAt" = NOW();
    RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TABLE country
(
    "id"              INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "code"            VARCHAR(2)       NOT NULL,
    "isActive"        BOOLEAN          NOT NULL DEFAULT TRUE,

    "createdAt"       TIMESTAMPTZ      NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt"       TIMESTAMPTZ      NOT NULL DEFAULT CURRENT_TIMESTAMP,

    UNIQUE ("code")
);
CREATE TRIGGER setTimestamp BEFORE UPDATE ON country FOR EACH ROW EXECUTE PROCEDURE setUpdatedAt();

CREATE TABLE city
(
    "id"              INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "name"            VARCHAR(64)      NOT NULL,
    "countryId"       INT              NOT NULL,
    "isActive"        BOOLEAN          NOT NULL DEFAULT TRUE,
    "latitude"        FLOAT            NOT NULL,
    "longitude"       FLOAT            NOT NULL,

    "createdAt"       TIMESTAMPTZ      NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt"       TIMESTAMPTZ      NOT NULL DEFAULT CURRENT_TIMESTAMP,

    UNIQUE ("name"),

    FOREIGN KEY ("countryId")    REFERENCES country ("id")
);
CREATE TRIGGER setTimestamp BEFORE UPDATE ON city FOR EACH ROW EXECUTE PROCEDURE setUpdatedAt();
CREATE INDEX ON city ("name");
CREATE INDEX ON city ("countryId");

CREATE TABLE weather
(
    "id"              INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "weatherTag"      VARCHAR(64)      NOT NULL,
    "cityId"          INT              NOT NULL,
    "date"            TIMESTAMPTZ      NOT NULL,
    "temp"            FLOAT            NOT NULL,
    "tempMin"         FLOAT            NOT NULL,
    "tempMax"         FLOAT            NOT NULL,
        
    "createdAt"       TIMESTAMPTZ      NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt"       TIMESTAMPTZ      NOT NULL DEFAULT CURRENT_TIMESTAMP,

    UNIQUE ("date"),

    FOREIGN KEY ("cityId")    REFERENCES city ("id")
);
CREATE TRIGGER setTimestamp BEFORE UPDATE ON weather FOR EACH ROW EXECUTE PROCEDURE setUpdatedAt();
CREATE INDEX ON weather ("date");
CREATE INDEX ON weather ("cityId");

CREATE TABLE search_history
(
    "id"              INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "cityId"          INT              NOT NULL,
    "day"             TIMESTAMPTZ      NOT NULL,
    "count"           INT              NOT NULL DEFAULT 0 CHECK ("count" >= 0),
        
    "createdAt"       TIMESTAMPTZ      NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt"       TIMESTAMPTZ      NOT NULL DEFAULT CURRENT_TIMESTAMP,

    UNIQUE ("day", "cityId"),

    FOREIGN KEY ("cityId")    REFERENCES city ("id")
);
CREATE TRIGGER setTimestamp BEFORE UPDATE ON search_history FOR EACH ROW EXECUTE PROCEDURE setUpdatedAt();
CREATE INDEX ON search_history ("day");
CREATE INDEX ON search_history ("cityId");
