openapi: 3.0.3
info:
  title: Swagger - OpenAPI 3.0
  description: Weather service
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
paths:
  /admin/country/create:
    post:
      tags:
        - Admin countires methods
      summary: country
      description: getting country
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - code
              properties:
                code:
                  type: string
                  example: US
                isActive:
                  type: boolean
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  result:
                    $ref: '#/components/schemas/Country'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
          
  /admin/country/list:
    get:
      tags:
        - Admin countires methods
      summary: getting country
      description: getting country
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Country'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
                    
  /admin/city/create:
    post:
      tags:
        - Admin cities methods
      summary: cities
      description: Getting cities
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: 
                - countryId
                - name
              properties:
                countryId:
                  type: integer
                  format: int64
                  example: 1
                latitude:
                  type: number
                  format: float
                  example: 51.50
                longitude:
                  type: number
                  format: float
                  example: -0.11
                name:
                  type: string
                  example: London
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  result:
                    $ref: '#/components/schemas/City'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception

  /admin/city/list:
    get:
      tags:
        - Admin cities methods
      summary: Getting cities
      description: Getting cities
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/City'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
          
  /admin/weather/sync:
    post:
      tags:
        - Admin weather methods
      summary: cities
      description: getting cities
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: 
                - cityId
              properties:
                cityId:
                    type: integer
                    example: 1
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Weather'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
          
  /city/list:
    get:
      tags:
        - Public methods
      summary: cities
      description: getting all active cities
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/City'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
          
                    
  /city/{id}/weather:
    get:
      tags:
        - Public methods
      summary: weather
      description: getting weather
      parameters:
        - name: id
          in: path
          description: ID of city to return
          required: true
          schema:
            type: integer
            format: int64
        - name: from
          in: query
          description: Tags to filter by
          required: false
          explode: true
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          description: Tags to filter by
          required: false
          explode: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Weather'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
          
          
                              
  /city/{id}/temperature:
    get:
      tags:
        - Public methods
      summary: temperature
      description: getting temperature
      parameters:
        - name: id
          in: path
          description: ID of city to return
          required: true
          schema:
            type: integer
            format: int64
        - name: from
          in: query
          description: date form
          required: true
          explode: true
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          description: date to
          required: true
          explode: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  result:
                    type: object
                    required: 
                      - cityId
                      - temperature
                    properties:
                      cityId:
                        type: integer
                        format: int64
                        example: 10
                      temperature:
                        type: number
                        format: float
                        example: 271.58
                    
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
          
          
  /city/popular:
    get:
      tags:
        - Public methods
      summary:  the most popular city
      description: getting the most popular city
      parameters:
        - name: from
          in: query
          description: date form
          required: true
          explode: true
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          description: date to
          required: true
          explode: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  result:
                    type: object
                    required: 
                      - cityId
                      - temperature
                    properties:
                      cityId:
                        type: integer
                        format: int64
                        example: 10
                      temperature:
                        type: number
                        format: float
                        example: 271.58
                    
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
          

components:
  schemas:
    City: 
      type: object
      required: 
        - id
        - countryId
        - name
        - latitude
        - longitude
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
          format: int64
          example: 10
        countryId:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: London
          
        latitude:
          type: number
          format: float
          example: 51.50
          
        longitude:
          type: number
          format: float
          example: -0.11
          
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          
    Country: 
      type: object
      required: 
        - id
        - code
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
          format: int64
          example: 1
        code:
          type: string
          example: US
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          
    Weather: 
      type: object
      required: 
        - id
        - weatherTag
        - cityId
        - date
        - temp
        - tempMin
        - tempMax
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
          format: int64
          example: 1
        weatherTag:
          type: string
          example: Clouds
        cityId:
          type: integer
          format: int64
          example: 1
        date:
          type: string
          format: date-time
        temp:
          type: number
          format: float
          example: 271.53
        tempMin:
          type: number
          format: float
          example: 271.53
        tempMax:
          type: number
          format: float
          example: 271.53
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
